// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/vessel/vessel.proto

/*
Package go_micro_srv_vessel is a generated protocol buffer package.

It is generated from these files:
	proto/vessel/vessel.proto

It has these top-level messages:
	Vessel
	Spesification
	Response
*/
package go_micro_srv_vessel

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Vessel struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Capacity  int32  `protobuf:"varint,2,opt,name=capacity" json:"capacity,omitempty"`
	MaxWeight int32  `protobuf:"varint,3,opt,name=max_weight,json=maxWeight" json:"max_weight,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Available bool   `protobuf:"varint,5,opt,name=available" json:"available,omitempty"`
	OwnerId   string `protobuf:"bytes,6,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
}

func (m *Vessel) Reset()                    { *m = Vessel{} }
func (m *Vessel) String() string            { return proto.CompactTextString(m) }
func (*Vessel) ProtoMessage()               {}
func (*Vessel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Vessel) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Vessel) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Vessel) GetMaxWeight() int32 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

func (m *Vessel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Vessel) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Vessel) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

type Spesification struct {
	Capacity  int32 `protobuf:"varint,1,opt,name=capacity" json:"capacity,omitempty"`
	MaxWeight int32 `protobuf:"varint,2,opt,name=max_weight,json=maxWeight" json:"max_weight,omitempty"`
}

func (m *Spesification) Reset()                    { *m = Spesification{} }
func (m *Spesification) String() string            { return proto.CompactTextString(m) }
func (*Spesification) ProtoMessage()               {}
func (*Spesification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Spesification) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Spesification) GetMaxWeight() int32 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

type Response struct {
	Vessel  *Vessel   `protobuf:"bytes,1,opt,name=vessel" json:"vessel,omitempty"`
	Vessels []*Vessel `protobuf:"bytes,2,rep,name=vessels" json:"vessels,omitempty"`
	Created bool      `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetVessel() *Vessel {
	if m != nil {
		return m.Vessel
	}
	return nil
}

func (m *Response) GetVessels() []*Vessel {
	if m != nil {
		return m.Vessels
	}
	return nil
}

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func init() {
	proto.RegisterType((*Vessel)(nil), "go.micro.srv.vessel.Vessel")
	proto.RegisterType((*Spesification)(nil), "go.micro.srv.vessel.Spesification")
	proto.RegisterType((*Response)(nil), "go.micro.srv.vessel.Response")
}

func init() { proto.RegisterFile("proto/vessel/vessel.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x4a, 0xf3, 0x40,
	0x10, 0xc7, 0xbf, 0x4d, 0xdb, 0x34, 0x9d, 0xcf, 0x7a, 0x98, 0x5e, 0xb6, 0xd5, 0x42, 0xc8, 0xa9,
	0xa7, 0x08, 0x2d, 0x3e, 0x80, 0x08, 0x82, 0xe2, 0x29, 0x05, 0x05, 0x2f, 0x65, 0x9b, 0x8c, 0x75,
	0xa1, 0xc9, 0x86, 0xdd, 0x90, 0xd6, 0xb7, 0xf0, 0x11, 0x7c, 0x0d, 0xdf, 0x4e, 0xd8, 0x24, 0x4a,
	0x25, 0xb4, 0xa7, 0xcc, 0xcc, 0x7f, 0xe6, 0x9f, 0xd9, 0xdf, 0x2e, 0x8c, 0x73, 0xad, 0x0a, 0x75,
	0x55, 0x92, 0x31, 0xb4, 0xad, 0x3f, 0xa1, 0xad, 0xe1, 0x68, 0xa3, 0xc2, 0x54, 0xc6, 0x5a, 0x85,
	0x46, 0x97, 0x61, 0x25, 0x05, 0x9f, 0x0c, 0xdc, 0x27, 0x1b, 0xe2, 0x39, 0x38, 0x32, 0xe1, 0xcc,
	0x67, 0xb3, 0x41, 0xe4, 0xc8, 0x04, 0x27, 0xe0, 0xc5, 0x22, 0x17, 0xb1, 0x2c, 0xde, 0xb9, 0xe3,
	0xb3, 0x59, 0x2f, 0xfa, 0xc9, 0x71, 0x0a, 0x90, 0x8a, 0xfd, 0x6a, 0x47, 0x72, 0xf3, 0x56, 0xf0,
	0x8e, 0x55, 0x07, 0xa9, 0xd8, 0x3f, 0xdb, 0x02, 0x22, 0x74, 0x33, 0x91, 0x12, 0xef, 0x5a, 0x33,
	0x1b, 0xe3, 0x25, 0x0c, 0x44, 0x29, 0xe4, 0x56, 0xac, 0xb7, 0xc4, 0x7b, 0x3e, 0x9b, 0x79, 0xd1,
	0x6f, 0x01, 0xc7, 0xe0, 0xa9, 0x5d, 0x46, 0x7a, 0x25, 0x13, 0xee, 0xda, 0xa9, 0xbe, 0xcd, 0xef,
	0x93, 0xe0, 0x01, 0x86, 0xcb, 0x9c, 0x8c, 0x7c, 0x95, 0xb1, 0x28, 0xa4, 0xca, 0x0e, 0x16, 0x63,
	0x47, 0x17, 0x73, 0xfe, 0x2c, 0x16, 0x7c, 0x30, 0xf0, 0x22, 0x32, 0xb9, 0xca, 0x0c, 0xe1, 0x02,
	0xdc, 0x8a, 0x82, 0x75, 0xf9, 0x3f, 0xbf, 0x08, 0x5b, 0x08, 0x85, 0x15, 0x9d, 0xa8, 0x6e, 0xc5,
	0x6b, 0xe8, 0x57, 0x91, 0xe1, 0x8e, 0xdf, 0x39, 0x35, 0xd5, 0xf4, 0x22, 0x87, 0x7e, 0xac, 0x49,
	0x14, 0x94, 0x58, 0x5a, 0x5e, 0xd4, 0xa4, 0xf3, 0x2f, 0x06, 0xc3, 0xaa, 0x7b, 0x49, 0xba, 0x94,
	0x31, 0xe1, 0x23, 0x9c, 0xdd, 0x5a, 0xb1, 0xbe, 0x98, 0x63, 0x7f, 0x98, 0x4c, 0x5b, 0xc5, 0xe6,
	0x8c, 0xc1, 0x3f, 0x7c, 0x81, 0xd1, 0x9d, 0xcc, 0x92, 0x9b, 0x06, 0x75, 0x6d, 0x1a, 0xb4, 0xce,
	0x1d, 0x80, 0x3e, 0xe9, 0xbd, 0x76, 0xed, 0xcb, 0x5a, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd1,
	0x50, 0x12, 0x72, 0x76, 0x02, 0x00, 0x00,
}
